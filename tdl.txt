// ignore_for_file: deprecated_member_use

import 'package:flutter/material.dart';

void main() {
  return runApp(const MaterialApp(
    debugShowCheckedModeBanner: false,
    title: 'Todo List',
    home: MyApp(),
  ));
}

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  MyAppState createState() => MyAppState();
}

class MyAppState extends State<MyApp> {
  final List<Task> _todoItems = [];
  bool isChecked = false;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.indigo[400],
      body: Container(
        padding: const EdgeInsets.only(
          top: 60,
          left: 20,
          right: 20,
          bottom: 80,
        ),
        child: Column(
          children: [
            Row(
              children: const [
                Icon(
                  Icons.playlist_add_check,
                  size: 40,
                  color: Colors.white,
                ),
                Text(
                  'ToDoList',
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: 40,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                SizedBox(
                  height: 20,
                ),
              ],
            ),
            Row(
              children: [
                Text(
                  '${_todoItems.length} of ${_todoItems.where((element) => element.status).toList().length} task complete',
                  style: const TextStyle(
                    color: Colors.white,
                    fontSize: 20,
                    fontWeight: FontWeight.w600,
                  ),
                ),
              ],
            ),
            Expanded(
              child: Container(
                decoration: const BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.all(Radius.circular(20)),
                ),
                child: ListView.builder(
                    itemCount: _todoItems.length,
                    itemBuilder: (BuildContext context, int index) {
                      return Dismissible(
                        key: ObjectKey(_todoItems[index]),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            Row(
                              children: [
                                Checkbox(
                                  value: _todoItems[index].status,
                                  checkColor: Colors.white,
                                  activeColor: Colors.grey,
                                  onChanged: (value) {
                                    setState(() {
                                      _todoItems[index].status =
                                          !_todoItems[index].status;
                                    });
                                  },
                                ),
                                Text(
                                  _todoItems[index].content.toString(),
                                  style: TextStyle(
                                    decoration: _todoItems[index].status
                                        ? TextDecoration.lineThrough
                                        : TextDecoration.none,
                                  ),
                                ),
                              ],
                            ),
                            IconButton(
                              icon: const Icon(
                                Icons.delete,
                                color: Colors.grey,
                              ),
                              onPressed: () {
                                showDialog(
                                  context: context,
                                  builder: (BuildContext context) {
                                    return AlertDialog(
                                      shape: RoundedRectangleBorder(
                                          borderRadius:
                                              BorderRadius.circular(8)),
                                      title: const Text('Please Confirm'),
                                      content: const Text(
                                        'Are you sure to remove this item?',
                                        style: TextStyle(
                                          color: Colors.grey,
                                        ),
                                      ),
                                      actions: <Widget>[
                                        FlatButton(
                                          onPressed: () {
                                            Navigator.of(context).pop();
                                          },
                                          child: const Text('Cancel'),
                                        ),
                                        FlatButton(
                                          onPressed: () {
                                            setState(() {
                                              _todoItems.removeAt(index);
                                            });
                                            Navigator.of(context).pop();
                                          },
                                          child: const Text('OK'),
                                        ),
                                      ],
                                    );
                                  },
                                );
                              },
                            ),
                          ],
                        ),
                      );
                    }),
              ),
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          String newTask = '';
          showDialog(
              context: context,
              builder: (BuildContext context) {
                return AlertDialog(
                  shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(8)),
                  title: const Text('New Todo'),
                  content: TextField(
                    onChanged: (String value) {
                      newTask = value;
                    },
                    decoration: const InputDecoration(
                        hintText: 'Enter something to do...',
                        contentPadding: EdgeInsets.all(16.0)),
                  ),
                  actions: <Widget>[
                    FlatButton(
                      onPressed: () {
                        Navigator.of(context).pop();
                      },
                      child: const Text('Cancel'),
                    ),
                    FlatButton(
                      onPressed: () {
                        if (newTask.isNotEmpty) {
                          setState(() {
                            Task task =
                                Task(status: isChecked, content: newTask);
                            _todoItems.add(task);
                          });
                          Navigator.of(context).pop();
                        }
                      },
                      child: const Text('Add'),
                    ),
                  ],
                );
              });
        },
        child: const Icon(
          Icons.add,
          color: Colors.white,
        ),
      ),
    );
  }
}

class Task {
  bool status;
  String content;
  Task({required this.status, required this.content});
}

